1.객체 지향 프로그래밍

- Java : 객체 지향 프로그래밍 언어
<-> 절차 지향 프로그래밍 언어

2.프로그래밍 언어 2가지 형태로 분류
- 객체 지향 프로그래밍 언어 : 현 시점, 현대적 프로그래밍 언어들은 대부분은 객체 지향 프로그래밍 언어
> JS, TS, React, C++, C#, Java, Python
> OOP
> Object Oriented Programing
> 객체를 지향하는 프로그래밍 언어 => 개체 => 객체 => 어떤 속성과 기능을 탑재한 실체(*사물 등) => 속성과 기능을 탑재한 객체들간의 상호작용을 매우 중요하게 생각 => "무엇을"

- 절차 지향 프로그래밍 언어
> C
> PP
> Procedural Programing
> 어떤 프로그램을 설계.개발하는데 있어서 절차를 매우 중요하게 지향한다 => 실행 순서를 중요하게 생각 => How // 프로그램의 흐름을 순차적으로 따라가면서 처리하는 방식 중요하게 생각 => "어떻게" 

MusicPlayerMain1
MusicPlayerData

1) 절차지향 프로그래밍 언어로 코드를 작성했을 때 장.단
- 중복적 혹은 반복적으로 사용되는 코드를 효율화
- 모듈화 (*레고 -> 블록)
- 기능과 데이터가 분리되어서 관리된다

RectangleProceduralMain

2) 별도의 클래스 선언 후 객체지향 방식의 코드로 변환!!!
> Rectangle 클래스
> 기본 멤버변수 선언 // 메서드 함수 선언

Java Class 내용
- 생성자
- 패키지
- 접근 제어자
- 자바 메모리 구조 & static
- 클래스 & 인스턴스 상속 개념
- 다형성

git hub clone // fork // pull => 터미널 cmd













